services:
  app:
    build:
      context: .
    ports:
      - '8000:8000'
    volumes:
      - ./reminder:/reminder
    env_file:
      - ./dev.env
    depends_on:
      db:
        condition: service_healthy
        restart: true
      celery:
        condition: service_healthy
        restart: true

  db:
     image: postgres:16.1-alpine3.19
     restart: always
     volumes:
       - db-data:/var/lib/postgresql/data
     env_file:
       - ./dev.env
     expose:
       - '5432'
     healthcheck:
       test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]

  rabbitmq:
    image: rabbitmq:3.13.0-rc.4-management-alpine
    healthcheck:
      test: ['CMD-SHELL', 'rabbitmq-diagnostics status']
    env_file:
      - ./dev.env
    ports:
      - '5672:5672'
      - '15671:15672'

  redis-stack:
    image: redis/redis-stack:latest
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping']
    ports:
      - '8001:8001'

  celery:
    build:
      context: .
    volumes:
      - ./reminder:/reminder
    command: >
      sh -c 'celery -A reminder worker -l INFO'
    depends_on:
      redis-stack:
        condition: service_healthy
        restart: true
      rabbitmq:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ['CMD-SHELL', 'celery inspect ping']
    env_file:
      - ./dev.env

  flower:
    image: mher/flower
    ports:
      - '5555:5555'
    command: >
      sh -c 'celery flower --port=5555 --broker_api=$${FLOWER_BROKER_API_URL}'
    depends_on:
      app:
        condition: service_started
      celery:
        condition: service_healthy
        restart: true
    env_file:
      - ./dev.env

volumes:
 db-data:
